{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/add-user/add-user.component.ts","webpack:///src/app/add-user/add-user.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/check-form.service.ts","webpack:///src/app/common.service.ts","webpack:///src/app/edit-user/edit-user.component.ts","webpack:///src/app/edit-user/edit-user.component.html","webpack:///src/app/table-buttons/table-buttons.component.ts","webpack:///src/app/table-buttons/table-buttons.component.html","webpack:///src/app/users/users.component.ts","webpack:///src/app/users/users.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddUserComponent","commonService","matDialog","datepipe","addUser","dialogRef","open","data","name","status","firstName","lastName","title","roles","afterClosed","subscribe","result","emit","addUserClick","selector","templateUrl","styleUrls","routes","AppRoutingModule","forRoot","imports","AppComponent","eventsSubject","True","refreshTable","next","appRoute","path","component","AppModule","withComponents","declarations","providers","bootstrap","CheckFormService","value","providedIn","CommonService","http","user","headers","append","post","pipe","res","json","get","EditUserComponent","checkForm","flashMessages","router","rolesControl","rolesList","checked","onChanged","setValue","split","join","close","_id","checkValue","show","cssClass","timeout","undefined","success","msg","editUser","filter","onChange","userSaveClick","onNoClick","TableButtonsComponent","params","refreshTableFromButtons","deletedUser","deleteUser","context","componentParent","methodFromParent","UsersComponent","gridOptions","defaultColDef","resizable","columnDefs","headerName","field","hide","cellRenderer","frameworkComponents","tableButtons","getAllUsers","eventsSubscription","events","unsubscribe","users","dateFromId","Date","parseInt","substring","addDate","transform","lastUpdateDate","rowData","environment","production","bootstrapModule","catch","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, EventEmitter, Input, Output  } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DatePipe } from '@angular/common';\r\nimport { CommonService } from '../common.service';\r\nimport { EditUserComponent } from '../edit-user/edit-user.component';\r\n\r\n@Component({\r\n  selector: 'app-add-user',\r\n  templateUrl: './add-user.component.html',\r\n  styleUrls: ['./add-user.component.css']\r\n})\r\nexport class AddUserComponent implements OnInit {\r\n\r\n  constructor(\r\n    private commonService: CommonService,\r\n    public matDialog: MatDialog,\r\n    public datepipe: DatePipe\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  @Output()\r\n  addUser = new EventEmitter<boolean>();\r\n\r\n  addUserClick() {\r\n    const dialogRef = this.matDialog.open(EditUserComponent, {\r\n      data: {\r\n        name: 'New user',\r\n        status: 'Enabled',\r\n        firstName: '',\r\n        lastName: '',\r\n        title: '',\r\n        roles: ''\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.addUser.emit(true);\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"buttons\">\r\n  <button mat-raised-button color=\"primary\" (click)=\"addUserClick()\">Add user</button>\r\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'front-end-app';\r\n\r\n  addUser(True) {\r\n    this.refreshTable();\r\n  }\r\n\r\n  eventsSubject: Subject<void> = new Subject<void>();\r\n\r\n  refreshTable() {\r\n    this.eventsSubject.next();\r\n  }\r\n\r\n}","<div class=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\r\n  <h5 class=\"my-0 mr-md-auto font-weight-normal\">Test project for Wellyes</h5>\r\n  <nav class=\"my-2 my-md-0 mr-md-3\">\r\n    <a class=\"p-2 text-dark\" href=\"https://github.com/echonok\" target=\"_blank\">My Githab</a><br>\r\n    <a class=\"p-2 text-dark\" href=\"https://github.com/echonok/angular_users\" target=\"_blank\">This project on Githab</a>\r\n  </nav>\r\n</div>\r\n<div class=\"my-container\">\r\n  <app-add-user (addUser)=\"addUser($event)\"></app-add-user>\r\n  <app-users [events]=\"eventsSubject.asObservable()\"></app-users>\r\n  <flash-messages></flash-messages>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { EditUserComponent } from './edit-user/edit-user.component';\r\nimport { TableButtonsComponent } from './table-buttons/table-buttons.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CheckFormService } from './check-form.service';\r\nimport { CommonService } from './common.service';\r\nimport { FlashMessagesModule } from 'angular2-flash-messages';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\n\r\nimport { DatePipe } from '@angular/common';\r\nimport { AddUserComponent } from './add-user/add-user.component';\r\n\r\nconst appRoute: Routes = [\r\n  {path: '', component: UsersComponent}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UsersComponent,\r\n    EditUserComponent,\r\n    TableButtonsComponent,\r\n    AddUserComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    RouterModule.forRoot(appRoute),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlashMessagesModule.forRoot(),\r\n    HttpModule,\r\n    AgGridModule.withComponents([]),\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule\r\n  ],\r\n  providers: [\r\n    CheckFormService,\r\n    CommonService,\r\n    DatePipe\r\n  ],\r\n  bootstrap: [\r\n    AppComponent\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatInputModule\r\n  ]\r\n\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CheckFormService {\r\n\r\n  constructor() { }\r\n  checkValue(value) {\r\n    if (value === '') {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonService {\r\n\r\n  constructor(\r\n    private http: Http\r\n  ) { }\r\n\r\n  addUser(user) {\r\n    let headers = new Headers();\r\n    headers.append('Content-type', 'application/json');\r\n    return this.http.post(\r\n      'api/addUser',\r\n      user,\r\n      {headers: headers}).pipe(map(res => res.json()));\r\n  }\r\n\r\n  editUser(user) {\r\n    let headers = new Headers();\r\n    headers.append('Content-type', 'application/json');\r\n    return this.http.post(\r\n      'api/editUser',\r\n      user,\r\n      {headers: headers}).pipe(map(res => res.json()));\r\n  }\r\n\r\n  deleteUser(id) {\r\n    let headers = new Headers();\r\n    headers.append('Content-type', 'application/json');\r\n    return this.http.post(\r\n      'api/deleteUser',\r\n      id,\r\n      {headers: headers}).pipe(map(res => res.json()));\r\n  }\r\n\r\n  getAllUsers() {\r\n    return this.http.get(\r\n      'api/getAllUsers'\r\n    ).pipe(map(res => res.json()));\r\n  }\r\n}\r\n","import { Component, OnInit, Inject, EventEmitter, Input, Output } from '@angular/core';\r\nimport { CheckFormService } from '../check-form.service';\r\nimport { CommonService } from '../common.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nexport interface DialogData {\r\n  _id: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  title: string;\r\n  roles: string;\r\n  status: string;\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit-user',\r\n  templateUrl: './edit-user.component.html',\r\n  styleUrls: ['./edit-user.component.css']\r\n})\r\n\r\nexport class EditUserComponent implements OnInit {\r\n\r\n  _id: String;\r\n  firstName: String;\r\n  lastName: String;\r\n  title: String;\r\n  roles: String;\r\n  status: String;\r\n  name: String;\r\n\r\n  rolesControl = new FormControl();\r\n  rolesList: string[] = ['Administrator', 'Sales Manager', 'Sales Representatibe', 'Account Manager', 'Product', 'Marketing'];\r\n  selected: string[];\r\n\r\n  checked = false;\r\n\r\n  @Output()\r\n  onChanged = new EventEmitter<boolean>();\r\n\r\n  constructor(\r\n    private checkForm: CheckFormService,\r\n    private flashMessages: FlashMessagesService,\r\n    private router: Router,\r\n    private commonService: CommonService,\r\n    public dialogRef: MatDialogRef<EditUserComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.checked = this.data.status === 'Enabled' ? true : false;\r\n    if (this.data.roles) {\r\n      this.rolesControl.setValue(this.data.roles.split(', '));\r\n    }\r\n  }\r\n\r\n  filter(data) {\r\n    this.data.roles = data.value.join(', ');\r\n  }\r\n\r\n  onChange(value) {\r\n    this.data.status = value.checked === true ? 'Enabled' : 'Disabled';\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  userSaveClick() {\r\n\r\n    const user = {\r\n      _id: this.data._id,\r\n      firstName: this.data.firstName,\r\n      lastName: this.data.lastName,\r\n      title: this.data.title,\r\n      roles: this.data.roles,\r\n      status: this.data.status\r\n    };\r\n\r\n    if (!this.checkForm.checkValue(user.firstName)) {\r\n      this.flashMessages.show('First name is empty', {\r\n        cssClass: 'alert-danger',\r\n        timeout: 4000\r\n      });\r\n      return false;\r\n    }\r\n\r\n    if (!this.checkForm.checkValue(user.lastName)) {\r\n      this.flashMessages.show('Last name is empty', {\r\n        cssClass: 'alert-danger',\r\n        timeout: 4000\r\n      });\r\n      return false;\r\n    }\r\n\r\n    if (this.data._id === undefined) {\r\n      this.commonService.addUser(user).subscribe(data => {\r\n        if (!data.success) {\r\n          this.flashMessages.show(data.msg, {\r\n            cssClass: 'alert-danger',\r\n            timeout: 4000\r\n          });\r\n          return false;\r\n        } else {\r\n          this.flashMessages.show(data.msg, {\r\n            cssClass: 'alert-success',\r\n            timeout: 2000\r\n          });\r\n          return false;\r\n        }\r\n      });\r\n      this.dialogRef.close();\r\n    } else {\r\n      this.commonService.editUser(user).subscribe(data => {\r\n        if (!data.success) {\r\n          this.flashMessages.show(data.msg, {\r\n            cssClass: 'alert-danger',\r\n            timeout: 4000\r\n          });\r\n          return false;\r\n        } else {\r\n          this.flashMessages.show(data.msg, {\r\n            cssClass: 'alert-success',\r\n            timeout: 2000\r\n          });\r\n          return false;\r\n        }\r\n      });\r\n      this.dialogRef.close();\r\n    }\r\n\r\n  }\r\n}\r\n","<div mat-dialog-content>\r\n  <form class=\"input-form\">\r\n    <h1 mat-dialog-title>{{ data.name }}</h1>\r\n    \r\n    <mat-form-field [hidden]=\"true\" class=\"input-full-width\">\r\n      <mat-label>ID</mat-label>\r\n      <input disabled matInput placeholder=\"ID\" [(ngModel)]=\"data._id\" name=\"_id\">\r\n    </mat-form-field>\r\n    <br>\r\n\r\n    <mat-form-field class=\"input-full-width\">\r\n      <mat-label>First name</mat-label>\r\n      <input matInput placeholder=\"First name\" [(ngModel)]=\"data.firstName\" name=\"firstName\" required cdkFocusInitial>\r\n    </mat-form-field>\r\n    <br>\r\n\r\n    <mat-form-field class=\"input-full-width\">\r\n      <mat-label>Last name</mat-label>\r\n      <input matInput placeholder=\"Last name\" [(ngModel)]=\"data.lastName\" name=\"lastName\" required>\r\n    </mat-form-field>\r\n    <br>\r\n\r\n    <mat-form-field class=\"input-full-width\">\r\n      <mat-label>Title</mat-label>\r\n      <input matInput placeholder=\"Title\" [(ngModel)]=\"data.title\" name=\"title\">\r\n    </mat-form-field>\r\n    <br>\r\n\r\n    <mat-form-field>\r\n      <mat-label>Roles</mat-label>\r\n      <mat-select [formControl]=\"rolesControl\" (selectionChange)=\"filter($event)\" multiple [(value)]=\"selected\">\r\n        <mat-option *ngFor=\"let role of rolesList\" [value]=\"role\" name=\"role\">{{ role }}</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <br>\r\n\r\n    <mat-slide-toggle\r\n      class=\"slide-toggle\"\r\n      [checked]=\"checked\"\r\n      (change)=\"onChange($event)\">\r\n      Status\r\n    </mat-slide-toggle>\r\n\r\n  </form>\r\n\r\n</div>\r\n<div mat-dialog-actions class=\"buttons\">\r\n  <button class=\"button\" mat-raised-button color=\"primary\" (click)=\"userSaveClick()\" mat-dialog-close>Save</button>\r\n  <button class=\"button\" mat-raised-button color=\"warn\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n</div>","import { Component, OnInit, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\r\nimport { CommonService } from '../common.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Router } from '@angular/router';\r\nimport { EditUserComponent } from '../edit-user/edit-user.component';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-table-buttons',\r\n  templateUrl: './table-buttons.component.html',\r\n  styleUrls: ['./table-buttons.component.css']\r\n})\r\nexport class TableButtonsComponent implements ICellRendererAngularComp {\r\n  public params: any;\r\n\r\n  constructor(\r\n    private flashMessages: FlashMessagesService,\r\n    private commonService: CommonService,\r\n    public matDialog: MatDialog\r\n  ) { }\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n\r\n  editUser() {\r\n    const dialogRef = this.matDialog.open(EditUserComponent, {\r\n      data: {\r\n        name: 'Edit user',\r\n        _id: this.params.data._id,\r\n        firstName: this.params.data.firstName,\r\n        lastName: this.params.data.lastName,\r\n        title: this.params.data.title,\r\n        roles: this.params.data.roles,\r\n        status: this.params.data.status\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.refreshTableFromButtons();\r\n    });\r\n  }\r\n\r\n  deleteUser(): void {\r\n    const deletedUser = { _id: this.params.data._id };\r\n    this.commonService.deleteUser(deletedUser).subscribe(data => {\r\n      if (!data.success) {\r\n        this.flashMessages.show(data.msg, {\r\n          cssClass: 'alert-danger',\r\n          timeout: 4000\r\n        });\r\n        this.refreshTableFromButtons();\r\n        return false;\r\n      } else {\r\n        this.flashMessages.show(data.msg, {\r\n          cssClass: 'alert-success',\r\n          timeout: 2000\r\n        });\r\n        this.refreshTableFromButtons();\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n\r\n  refreshTableFromButtons() {\r\n    this.params.context.componentParent.methodFromParent();\r\n  }\r\n\r\n  refresh(): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"buttons\">\r\n  <button mat-raised-button color=\"primary\" (click)=\"editUser()\">edit</button>\r\n  <button mat-raised-button color=\"warn\" (click)=\"deleteUser()\">delete</button>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CommonService } from '../common.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { TableButtonsComponent } from '../table-buttons/table-buttons.component';\r\nimport { EditUserComponent } from '../edit-user/edit-user.component';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Observable, Subscription, Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  frameworkComponents: any;\r\n  private eventsSubscription: Subscription;\r\n  public context;\r\n\r\n  constructor(\r\n    private flashMessages: FlashMessagesService,\r\n    private commonService: CommonService,\r\n    public matDialog: MatDialog,\r\n    public datepipe: DatePipe\r\n  ) {\r\n    this.context = { componentParent: this };\r\n    this.frameworkComponents = {\r\n       tableButtons: TableButtonsComponent\r\n     };\r\n  }\r\n\r\n  @Input()\r\n  events: Observable<void>;\r\n\r\n  eventsSubject: Subject<void> = new Subject<void>();\r\n\r\n  gridOptions = {\r\n    defaultColDef: {\r\n      resizable: true\r\n    },\r\n  };\r\n\r\n  ngOnInit() {\r\n    this.getAllUsers();\r\n    this.eventsSubscription = this.events.subscribe(() => this.getAllUsers());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.eventsSubscription.unsubscribe();\r\n  }\r\n\r\n  columnDefs = [\r\n    {headerName: 'ID', field: '_id', hide: true },\r\n    {headerName: 'First Name', field: 'firstName' },\r\n    {headerName: 'Last Name', field: 'lastName' },\r\n    {headerName: 'Title', field: 'title' },\r\n    {headerName: 'Roles', field: 'roles' },\r\n    {headerName: 'Status', field: 'status' },\r\n    {headerName: 'Add Date', field: 'addDate' },\r\n    {headerName: 'Last Update Date', field: 'lastUpdateDate' },\r\n    {headerName: 'Actions', field: 'actions', cellRenderer: 'tableButtons' }\r\n  ];\r\n\r\n  rowData: any;\r\n\r\n  getAllUsers() {\r\n    this.commonService.getAllUsers().subscribe(data => {\r\n      if (!data.success) {\r\n        for (let user of data.users) {\r\n          const dateFromId = new Date(parseInt(user._id.substring(0, 8), 16) * 1000);\r\n          user.addDate = this.datepipe.transform(dateFromId, 'dd-MMM-yyyy');\r\n          user.lastUpdateDate = this.datepipe.transform(user.lastUpdateDate, 'dd-MMM-yyyy');\r\n        }\r\n        this.rowData = data.users;\r\n      }\r\n    });\r\n  }\r\n\r\n  methodFromParent() {\r\n    this.getAllUsers();\r\n  }\r\n\r\n}\r\n","<ag-grid-angular\r\n    style=\"width: 100%; height: 500px;\"\r\n    class=\"ag-theme-balham\"\r\n    [rowData]=\"rowData\"\r\n    [columnDefs]=\"columnDefs\"\r\n    [gridOptions]=\"gridOptions\"\r\n    [frameworkComponents]=\"frameworkComponents\"\r\n    [context]=\"context\"\r\n    >\r\n</ag-grid-angular>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}